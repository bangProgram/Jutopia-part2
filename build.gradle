plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.jbproject'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// thymeleaf Security 라이브러리 추가
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// thymeleaf Layout 라이브러리 추가
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 현재 DB : h2 > 추후 test 용 Inmemory DB로 변경
	// DB 사용은 Mysql 사용 할 것으로 예상 (aws : rds)
	runtimeOnly 'com.h2database:h2'

	// QueryDSL 의존성 추가
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor	"com.querydsl:querydsl-apt:5.0.0:jakarta"


	// jwt 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// start of querydsl
def querydslDir = layout.buildDirectory.dir("src/main/generated")

// QClass 저장 directory 설정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// 프로젝트 소스코드에서 QClass를 사용하기 위해 main.java.src directory에 QClass directory 추가
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// clean 실행 시, 생성된 QClass 삭제 설정
clean.doLast {
	file(querydslDir).deleteDir()
}

tasks.named('test') {
	useJUnitPlatform()
}
